{%- doc -%}
  Renders the cart drawer, a slide-out panel that displays the contents of the cart. It includes the cart icon that acts as a trigger.

  @param {object} [settings] - An object containing theme settings.

  @param {boolean} [settings.auto_open_cart_drawer] - If `true`, the cart drawer opens automatically after an item is
  added.
  @param {string} [settings.drawer_color_scheme] - The color scheme for the drawer.
{%- enddoc -%}

<script
  src="{{ 'cart-drawer.js' | asset_url }}"
  type="module"
></script>

<cart-drawer-component
  class="cart-drawer"
  {{ block.shopify_attributes }}
  {% if settings.auto_open_cart_drawer %}
    auto-open
  {% endif %}
>
  <button
    class="button header-actions__action button-unstyled"
    on:click="/open"
    aria-label="{{ 'accessibility.open_cart_drawer' | t }} {{ 'accessibility.cart_count' | t}}: {{ cart.item_count }}"
  >
    {% render 'cart-icon-component' %}
  </button>

  <dialog
    ref="dialog"
    class="cart-drawer__dialog dialog-modal dialog-drawer color-{{ settings.drawer_color_scheme }}{% if cart.empty? %} cart-drawer--empty{%endif%}"
    scroll-lock
  >
    <div class="cart-drawer__inner">
      <cart-items-component
        class="cart-items-component"
        data-section-id="{{ section.id }}"
      >
        {%- if cart.empty? -%}
          <div class="cart-drawer__header">
            <button
              ref="closeButton"
              on:click="cart-drawer-component/close"
              class="button cart-drawer__close-button button-unstyled"
              aria-label="{{ 'actions.close_dialog' | t }}"
            >
              <span class="svg-wrapper">
                {{- 'icon-close.svg' | inline_asset_content -}}
              </span>
            </button>
          </div>

          <div
            class="cart-drawer__content motion-reduce"
            aria-label="{{ 'accessibility.cart' | t }}"
          >
            <span class="cart-drawer__heading h3 cart-drawer__heading--empty">
              {{ 'content.your_cart_is_empty' | t }}
            </span>

            <div class="cart-drawer__items">
              {% render 'cart-products' %}
            </div>
          </div>
        {%- else -%}
          <div
            class="cart-drawer__header"
            id="cart-drawer-header"
          >
            <span class="cart-drawer__heading h3">
              {{ 'content.cart_title' | t }}
              {% render 'cart-bubble' %}
            </span>

            <button
              ref="closeButton"
              on:click="cart-drawer-component/close"
              class="button cart-drawer__close-button button-unstyled"
              aria-label="{{ 'actions.close_dialog' | t }}"
            >
              <span class="svg-wrapper">
                {{- 'icon-close.svg' | inline_asset_content -}}
              </span>
            </button>
          </div>

          <div class="cart-free-shipping">
            <p>
              <strong>ðŸš€ FREE SHIPPING ON ORDERS â‚¹100.00</strong><br>
              {% if cart.items.size != 0 %}
                {% if cart.total_price >= 10000 %}
                  ðŸŽ‰ You got free shipping!
                {% elsif cart.total_price < 10000 %}
                  Spend â‚¹{{ 10000 | minus: cart.total_price | money }} more and get free shipping!
                {% endif %}
              {% endif %}
            </p>
            <div class="progress-bar">
              <div
                class="progress-fill"
                style="width: {{ cart.total_price | divided_by: 10000.0 | times: 100 }}%;"
              ></div>
            </div>
          </div>

          <div
            class="cart-drawer__content motion-reduce"
            aria-label="{{ 'accessibility.cart' | t }}"
            style="--header-height: 60px;"
          >
            <scroll-hint
              class="cart-drawer__items"
            >
              {% render 'cart-products' %}
            </scroll-hint>

            <div
              class="cart-drawer__summary"
            >
              {% comment %}
              <div class="cart-actions-bar">
                <button class="cart-action">
                  <svg xmlns="http://www.w3.org/2000/svg" width="22px" height="22px" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M4 13v8h7v-8zm8 0v8h7v-8zm8 0v9H3v-9H2V7h3.04L5 6.5A3.5 3.5 0 0 1 8.5 3c1.27 0 2.39.68 3 1.7c.61-1.02 1.73-1.7 3-1.7A3.5 3.5 0 0 1 18 6.5l-.04.5H21v6zM3 8v4h8V8zm17 4V8h-8v4zm-3.05-5l.05-.5A2.5 2.5 0 0 0 14.5 4A2.5 2.5 0 0 0 12 6.5V7zM11 7v-.5A2.5 2.5 0 0 0 8.5 4A2.5 2.5 0 0 0 6 6.5l.05.5z"/>
                  </svg>
                  <p>Add gift wrap</p>
                </button>
                <button class="cart-action">
                  <svg xmlns="http://www.w3.org/2000/svg" width="22px" height="22px" viewBox="0 0 24 24">
                    <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M8.8 20.199A2.73 2.73 0 0 1 6.869 21H3v-3.844c0-.724.288-1.419.8-1.931m5 4.974l-5-4.974m5 4.974l9.974-9.978M3.8 15.225l9.984-9.995m0 0l1.426-1.428a2.733 2.733 0 0 1 3.867-.001l1.126 1.127a2.733 2.733 0 0 1 0 3.865l-1.428 1.428M13.783 5.23l4.991 4.991"/>
                  </svg>
                  <p>Add note</p>
                </button>
                <button class="cart-action">
                  <svg xmlns="http://www.w3.org/2000/svg" width="22px" height="22px" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M14.8 8L16 9.2L9.2 16L8 14.8zM4 4h16c1.11 0 2 .89 2 2v4a2 2 0 1 0 0 4v4c0 1.11-.89 2-2 2H4a2 2 0 0 1-2-2v-4c1.11 0 2-.89 2-2a2 2 0 0 0-2-2V6a2 2 0 0 1 2-2m0 2v2.54a3.994 3.994 0 0 1 0 6.92V18h16v-2.54a3.994 3.994 0 0 1 0-6.92V6zm5.5 2c.83 0 1.5.67 1.5 1.5S10.33 11 9.5 11S8 10.33 8 9.5S8.67 8 9.5 8m5 5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5"/>
                  </svg>
                  <p>Coupon</p>
                </button>
                <button class="cart-action">
                  <svg xmlns="http://www.w3.org/2000/svg" width="22px" height="22px" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M5.688 19.116q-1.092 0-1.851-.763q-.76-.763-.76-1.853H2.5q-.343 0-.575-.232t-.233-.576V6.616q0-.691.463-1.153T3.308 5h11.615q.667 0 1.141.475t.475 1.14v2h1.5q.383 0 .726.172q.344.172.566.475l2.815 3.79q.081.101.121.222t.04.263v2.155q0 .344-.231.576t-.576.232h-.808q0 1.09-.764 1.853t-1.855.762t-1.852-.762t-.76-1.853H8.309q0 1.096-.764 1.856t-1.856.76m.004-1q.675 0 1.145-.47t.47-1.146t-.47-1.145t-1.145-.47t-1.145.47t-.47 1.145t.47 1.145t1.145.47m-3-2.615h.647q.213-.662.869-1.138t1.484-.478q.79 0 1.466.468q.675.467.888 1.148h7.493V6.616q0-.27-.174-.443T14.923 6H3.308q-.231 0-.423.192q-.193.193-.193.424zm15.385 2.616q.675 0 1.145-.47q.47-.471.47-1.146t-.47-1.145t-1.145-.47t-1.145.47t-.47 1.145t.47 1.145t1.145.47m-1.54-4.615h4.712L18.5 9.866q-.096-.116-.221-.183T18 9.616h-1.461zm-7.422-2.75"/>
                  </svg>
                  <p>Shipping</p>
                </button>
              </div>

              <div class="custom-marquee">
                <div class="custom-marquee__text">
                  All charges are billed in <strong>USD</strong>. While the content of your cart is currently displayed
                  in, the checkout will use <strong>USD</strong> at the most current exchange rate.
                </div>
              </div>
          {% endcomment %}

              <div id="shipping-estimator">
                <h2>Estimate shipping</h2>

                <select id="country">
                  <option value="">Select Country</option>
                </select>

                <select id="state">
                  <option value="">Select State/Province</option>
                </select>

                <input type="text" id="zip" placeholder="Zip code">

                <button type="button" onclick="estimateShipping()">Estimate</button>
                <button type="button" onclick="resetForm()">Cancel</button>

                <p id="shipping-result"></p>
              </div>

              {% render 'cart-summary' %}
            </div>
          </div>
        {%- endif -%}
      </cart-items-component>
    </div>
  </dialog>
</cart-drawer-component>

{% stylesheet %}
        .cart-items-component {
          width: 100%;
          height: 100%;
          display: flex;
          flex-direction: column;
        }

        .cart-drawer__heading .cart-bubble {
          width: fit-content;
          border-radius: var(--style-border-radius-buttons-primary);
          aspect-ratio: auto;
          padding: var(--cart-padding);
        }

        .cart-drawer__heading .cart-bubble[data-maintain-ratio] {
          aspect-ratio: 1;
          min-width: 26px;
        }

        .cart-drawer__header {
          background-color: var(--color-background);
          display: flex;
          align-items: center;
          justify-content: space-between;
          width: 100%;
          padding: var(--cart-drawer-padding);
          border-bottom: var(--style-border-width) solid none;
          position: sticky;
          top: 0;
          z-index: 1;

          @media screen and (min-width: 750px) {
            padding: var(--cart-drawer-padding-desktop);
          }
        }

        .cart-drawer__dialog {
          overflow: hidden;
        }

        .cart-drawer__inner {
          height: 100%;
          overflow: hidden;
        }

        .cart-drawer__content {
          height: calc(100% - var(--header-height));
          display: flex;
          flex-direction: column;
        }

        .cart-drawer__summary {
          background-color: var(--color-background);
          position: sticky;
          bottom: 0;
          z-index: 1;
        }

        .cart-free-shipping {
        padding: 1rem;
        margin: 1.4rem;
        background-color: #f5f5f5;
        font-size: 0.9rem;
        text-align: center;
          border-radius: 10px;
      }

      .progress-bar {
        width: 100%;
        height: 6px;
        background-color: #ddd;
        border-radius: 3px;
        margin-top: 0.5rem;
        overflow: hidden;

      }

      .progress-fill {
        height: 100%;
        background-color: #000;
        width: 0;
        transition: width 0.3s ease;
      }

      .cart-actions-bar {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      padding: 1rem 0;
      gap: .5rem;
      border-top: 1px solid #eee;
      border-bottom: 2px dotted #eee;
      min-width: 352px;
    }

    .cart-action {
      background: transparent;
      color: #9b9b9b;
      border: none;
      padding: .5rem;
      font-size: .9rem
    }

    .cart-action:hover{
      color: black;
      font-weight: bold;
    }

    .custom-marquee {
    overflow: hidden;
    white-space: nowrap;
    width: 100%;
  }

  .custom-marquee__text {
    display: inline-block;
    padding-left: 100%;
    animation: scroll-marquee 15s linear infinite;
  }

  @keyframes scroll-marquee {
    0%   { transform: translateX(0%); }
    100% { transform: translateX(-100%); }
  }

  #shipping-estimator {
  background: #fff;
  border: 1px solid #ddd;
  padding: 1.2rem;
  border-radius: 10px;
  margin-top: 1rem;
}

#shipping-estimator h2 {
  font-size: 1.1rem;
  margin-bottom: 1rem;
}

#shipping-estimator select,
#shipping-estimator input {
  width: 100%;
  padding: 0.6rem;
  margin-bottom: 0.8rem;
  border: 1px solid #ccc;
  border-radius: 6px;
}

#shipping-estimator button {
  background-color: #000;
  color: #fff;
  border: none;
  padding: 0.6rem 1.2rem;
  border-radius: 6px;
  margin-right: 0.6rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

#shipping-estimator button:hover {
  background-color: #333;
}

#shipping-result {
  margin-top: 1rem;
  font-weight: 500;
  color: #444;
}
{% endstylesheet %}

<script>
  const countryDropdown = document.getElementById("country");
  const stateDropdown = document.getElementById("state");

  // Fetch country + state list
  fetch("https://countriesnow.space/api/v0.1/countries/states")
    .then(res => res.json())
    .then(data => {
      data.data.forEach(country => {
        const option = document.createElement("option");
        option.value = country.name;
        option.textContent = country.name;
        countryDropdown.appendChild(option);
      });

      countryDropdown.addEventListener("change", () => {
        const selectedCountry = countryDropdown.value;
        const selectedData = data.data.find(c => c.name === selectedCountry);

        // Clear old states
        stateDropdown.innerHTML = `<option value="">Select State/Province</option>`;

        selectedData.states.forEach(state => {
          const stateOption = document.createElement("option");
          stateOption.value = state.name;
          stateOption.textContent = state.name;
          stateDropdown.appendChild(stateOption);
        });
      });
    });

  async function estimateShipping() {
  const country = document.getElementById("country").value;
  const state = document.getElementById("state").value;
  const zip = document.getElementById("zip").value;
  const result = document.getElementById("shipping-result");

  if (!country || !state || !zip) {
    result.innerText = "Please fill all the fields.";
    return;
  }

  result.innerText = "Estimatingâ€¦";

  try {
    const resp = await fetch("/cart/shipping_rates.json", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-Requested-With": "XMLHttpRequest"
      },
      body: JSON.stringify({
        shipping_address: {
          country: country,
          province: state,
          zip: zip
        }
      })
    });

    const data = await resp.json();

    if (data.shipping_rates?.length) {
      const list = data.shipping_rates.map(r =>
        `<li>${r.name}: â‚¹${((r.price / 100).toFixed(2))*100}</li>`
      ).join("");
      result.innerHTML = `<ul>${list}</ul>`;
    } else {
      result.innerText = "No available shipping rates.";
    }
  } catch (err) {
    result.innerText = "Error fetching rates. Please try again.";
    console.error(err);
  }
}


  function resetForm() {
    document.getElementById("country").selectedIndex = 0;
    document.getElementById("state").innerHTML = '<option value="">Select State/Province</option>';
    document.getElementById("zip").value = '';
    document.getElementById("shipping-result").innerText = '';
  }
</script>
